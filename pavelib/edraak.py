"""
Edraak internationalization tasks
"""
from path import path
from paver.easy import task, needs, sh
import polib
from git import Repo
from .utils.cmd import django_cmd

PLATFORM_ROOT = path('.')
git_repo = Repo(PLATFORM_ROOT)

try:
    from pygments.console import colorize
except ImportError:
    colorize = lambda color, text: text  # pylint: disable-msg=invalid-name


@task
def edraak_transifex_pull():
    # Start with clean translation state
    clean_git_repo_msg = "The repo has local modifications. Please stash or commit your changes."
    assert not git_repo.is_dirty(untracked_files=True), clean_git_repo_msg

    # Get Edraak translations
    for resource in ('edraak-platform', 'edraak-platform-theme'):
        sh('tx pull --force --mode=reviewed --language=ar --resource=edraak.{}'.format(resource))


def cleanup_po_entry_conflicts(entry):
    """
    A temporary fix for https://openedx.atlassian.net/browse/LOC-67 .
    Pick the first one!
    """

    conflict_mark = u'#-#-#-#-#'
    msgstr = entry.msgstr

    if not msgstr.startswith(conflict_mark):
        return entry

    lines = msgstr.split(u'\n')

    for i, line in enumerate(lines):
        if i == 0:  # Skip the first conflict mark
            continue

        if line.startswith(conflict_mark):
            entry.msgstr = u'\n'.join(lines[1:i])

            while 'fuzzy' in entry.flags:
                entry.flags.remove('fuzzy')

            return entry

    raise Exception('Undefined behaviour')


@task
def edraak_generate_files():
    """
    Append all Edraak strings to the original django.mo.
    """
    lc_messages_dir = PLATFORM_ROOT / 'conf/locale/ar/LC_MESSAGES'

    django_pofile_name = lc_messages_dir / 'django.po'
    django_mofile_name = lc_messages_dir / 'django.mo'

    django_pofile = polib.pofile(django_pofile_name)

    for resource in ('edraak-platform.po', 'edraak-platform-theme.po'):
        edraak_pofile_name = lc_messages_dir / resource
        edraak_pofile = polib.pofile(edraak_pofile_name)

        for entry in edraak_pofile:
            django_pofile.append(entry)

    for i, entry in enumerate(django_pofile):
        django_pofile[i] = cleanup_po_entry_conflicts(entry)

    # Save a backup in git for later inspection, and keep django.po untouched
    customized_pofile_name = lc_messages_dir / 'django-edraak-customized.po'
    django_pofile.save(customized_pofile_name)
    django_pofile.save_as_mofile(django_mofile_name)


@task
@needs(
    'pavelib.edraak.edraak_transifex_pull',
    'pavelib.edraak.edraak_generate_files',
)
def edraak_i18n_pull():
    """
    Pulls Edraak translation files.
    """
    files_to_add = (
        'conf/locale/ar/LC_MESSAGES/edraak-platform-theme.po',
        'conf/locale/ar/LC_MESSAGES/edraak-platform.po',
        'conf/locale/ar/LC_MESSAGES/django.mo',
        'conf/locale/ar/LC_MESSAGES/django-edraak-customized.po',
    )

    sh('git add --force {}'.format(' '.join(files_to_add)))
    sh("git commit -m 'Update Edraak translations (autogenerated message)' --edit")


@task
def edraak_i18n_theme_push():
    """
    Run theme's ./scripts/edraak_i18n_theme_push.sh.
    """
    sh(django_cmd('lms', 'devstack', 'edraak_i18n_theme_push'))


@task
@needs(
    'pavelib.edraak.edraak_i18n_theme_push',
    'pavelib.i18n.i18n_extract',
)
def edraak_i18n_push():
    """
    Pushes the interesting Edraak entries to Transifex.

    interesting_entries = all_translatable_entries - translated_arabic_msgids
    """
    po_dir = PLATFORM_ROOT / 'conf/locale'
    english_po_dir = po_dir / 'en/LC_MESSAGES'

    arabic_entries = polib.pofile(po_dir / 'ar/LC_MESSAGES/django.po')
    interesting_entries_pofile = po_dir / 'en/LC_MESSAGES/edraak-platform.po'

    translated_arabic_msgids = {}
    for entry in arabic_entries:
        if entry.msgstr:
            translated_arabic_msgids[entry.msgid] = True

    interesting_entries = polib.POFile()

    # Just dummy values for Transifex to accept it
    interesting_entries.metadata = {
        "Project-Id-Version": "Edraak 1",
        "Report-Msgid-Bugs-To": "dev@qrf.org",
        "POT-Creation-Date": "2014-12-15 11:17+0200",
        "PO-Revision-Date": "YEAR-MO-DA HO:MI+ZONE",
        "Last-Translator": "Edraak Dev <dev@qrf.org>",
        "Language-Team": "Edraak Dev <dev@qrf.org>",
        "MIME-Version": "1.0",
        "Content-Type": "text/plain; charset=utf-8",
        "Content-Transfer-Encoding": "8bit",
        "Generated-By": "Paver",
    }

    for po_path in sorted(english_po_dir.files()):
        # Avoid .mo files
        if not po_path.endswith('.po'):
            continue

        if 'edraak' in po_path:
            continue

        pofile = polib.pofile(po_path)

        for entry in pofile:
            if not translated_arabic_msgids.get(entry.msgid, False):

                # Avoid inserting duplicate entries
                translated_arabic_msgids[entry.msgid] = True

                interesting_entries.append(entry)

    interesting_entries.save(interesting_entries_pofile)

    sh("tx push -l en -s -r edraak.edraak-platform")
